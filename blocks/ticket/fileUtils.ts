import type { FileMetadata } from "./types";

/**
 * Filters an array of FileMetadata objects based on specific business rules.
 * 
 * Rules:
 * - When there are 2 files and exactly 1 has originalFile=true, return only the original file (user-uploaded)
 * - For files without originalFile attribute, include them (likely user-uploaded via file input)
 * - For system-generated files, only include .docx files
 * 
 * @param files - Array of FileMetadata objects to filter
 * @returns Filtered array of FileMetadata objects containing only relevant files
 */
export function filterFiles(files: FileMetadata[]): FileMetadata[] {
  if (!Array.isArray(files)) return [];

  // So far we have only seen either 1 or 2 files included in the array
  // For two files where one has originalFile set to true and the other set to false,
  // one is usually a user-uploaded file, and the other one is generated by the system.
  // In this case, we will return the user-uploaded file
  if (files.length === 2) {
    const originalFiles = files.filter(file => file.originalFile === true);
    if (originalFiles.length === 1) {
      return originalFiles;
    }
  }

  return files.reduce((acc, file) => {
    // If it doesn't have `originalFile` attribute (this is likely uploaded by user via the file input field)
    if (!("originalFile" in file)) {
      return acc.concat(file);
    }
    // Return only .docx files for system-generated files
    if (file.fileName.toLowerCase().endsWith('.docx')) {
      return acc.concat(file);
    }
    return acc;
  }, [] as FileMetadata[]);
} 